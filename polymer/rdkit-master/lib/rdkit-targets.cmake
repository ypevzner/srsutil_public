# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget Inchi Inchi_static RDInchiLib RDInchiLib_static RDGeneral RDGeneral_static DataStructs DataStructs_static RDGeometryLib RDGeometryLib_static Alignment Alignment_static EigenSolvers EigenSolvers_static Optimizer Optimizer_static ForceField ForceField_static DistGeometry DistGeometry_static Catalogs Catalogs_static GraphMol GraphMol_static Depictor Depictor_static SmilesParse SmilesParse_static FileParsers FileParsers_static SubstructMatch SubstructMatch_static ChemReactions ChemReactions_static ChemTransforms ChemTransforms_static Subgraphs Subgraphs_static FragCatalog FragCatalog_static Descriptors Descriptors_static Fingerprints Fingerprints_static PartialCharges PartialCharges_static MolTransforms MolTransforms_static ForceFieldHelpers ForceFieldHelpers_static DistGeomHelpers DistGeomHelpers_static MolAlign MolAlign_static MolChemicalFeatures MolChemicalFeatures_static ShapeHelpers ShapeHelpers_static MolCatalog MolCatalog_static MolDraw2D MolDraw2D_static FMCS FMCS_static SimDivPickers SimDivPickers_static hc hc_static InfoTheory InfoTheory_static ChemicalFeatures ChemicalFeatures_static)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# The installation prefix configured by this project.
set(_IMPORT_PREFIX "/usr/local")

# Create imported target Inchi
add_library(Inchi SHARED IMPORTED)

# Create imported target Inchi_static
add_library(Inchi_static STATIC IMPORTED)

# Create imported target RDInchiLib
add_library(RDInchiLib SHARED IMPORTED)

# Create imported target RDInchiLib_static
add_library(RDInchiLib_static STATIC IMPORTED)

# Create imported target RDGeneral
add_library(RDGeneral SHARED IMPORTED)

# Create imported target RDGeneral_static
add_library(RDGeneral_static STATIC IMPORTED)

# Create imported target DataStructs
add_library(DataStructs SHARED IMPORTED)

# Create imported target DataStructs_static
add_library(DataStructs_static STATIC IMPORTED)

# Create imported target RDGeometryLib
add_library(RDGeometryLib SHARED IMPORTED)

# Create imported target RDGeometryLib_static
add_library(RDGeometryLib_static STATIC IMPORTED)

# Create imported target Alignment
add_library(Alignment SHARED IMPORTED)

# Create imported target Alignment_static
add_library(Alignment_static STATIC IMPORTED)

# Create imported target EigenSolvers
add_library(EigenSolvers SHARED IMPORTED)

# Create imported target EigenSolvers_static
add_library(EigenSolvers_static STATIC IMPORTED)

# Create imported target Optimizer
add_library(Optimizer SHARED IMPORTED)

# Create imported target Optimizer_static
add_library(Optimizer_static STATIC IMPORTED)

# Create imported target ForceField
add_library(ForceField SHARED IMPORTED)

# Create imported target ForceField_static
add_library(ForceField_static STATIC IMPORTED)

# Create imported target DistGeometry
add_library(DistGeometry SHARED IMPORTED)

# Create imported target DistGeometry_static
add_library(DistGeometry_static STATIC IMPORTED)

# Create imported target Catalogs
add_library(Catalogs SHARED IMPORTED)

# Create imported target Catalogs_static
add_library(Catalogs_static STATIC IMPORTED)

# Create imported target GraphMol
add_library(GraphMol SHARED IMPORTED)

# Create imported target GraphMol_static
add_library(GraphMol_static STATIC IMPORTED)

# Create imported target Depictor
add_library(Depictor SHARED IMPORTED)

# Create imported target Depictor_static
add_library(Depictor_static STATIC IMPORTED)

# Create imported target SmilesParse
add_library(SmilesParse SHARED IMPORTED)

# Create imported target SmilesParse_static
add_library(SmilesParse_static STATIC IMPORTED)

# Create imported target FileParsers
add_library(FileParsers SHARED IMPORTED)

# Create imported target FileParsers_static
add_library(FileParsers_static STATIC IMPORTED)

# Create imported target SubstructMatch
add_library(SubstructMatch SHARED IMPORTED)

# Create imported target SubstructMatch_static
add_library(SubstructMatch_static STATIC IMPORTED)

# Create imported target ChemReactions
add_library(ChemReactions SHARED IMPORTED)

# Create imported target ChemReactions_static
add_library(ChemReactions_static STATIC IMPORTED)

# Create imported target ChemTransforms
add_library(ChemTransforms SHARED IMPORTED)

# Create imported target ChemTransforms_static
add_library(ChemTransforms_static STATIC IMPORTED)

# Create imported target Subgraphs
add_library(Subgraphs SHARED IMPORTED)

# Create imported target Subgraphs_static
add_library(Subgraphs_static STATIC IMPORTED)

# Create imported target FragCatalog
add_library(FragCatalog SHARED IMPORTED)

# Create imported target FragCatalog_static
add_library(FragCatalog_static STATIC IMPORTED)

# Create imported target Descriptors
add_library(Descriptors SHARED IMPORTED)

# Create imported target Descriptors_static
add_library(Descriptors_static STATIC IMPORTED)

# Create imported target Fingerprints
add_library(Fingerprints SHARED IMPORTED)

# Create imported target Fingerprints_static
add_library(Fingerprints_static STATIC IMPORTED)

# Create imported target PartialCharges
add_library(PartialCharges SHARED IMPORTED)

# Create imported target PartialCharges_static
add_library(PartialCharges_static STATIC IMPORTED)

# Create imported target MolTransforms
add_library(MolTransforms SHARED IMPORTED)

# Create imported target MolTransforms_static
add_library(MolTransforms_static STATIC IMPORTED)

# Create imported target ForceFieldHelpers
add_library(ForceFieldHelpers SHARED IMPORTED)

# Create imported target ForceFieldHelpers_static
add_library(ForceFieldHelpers_static STATIC IMPORTED)

# Create imported target DistGeomHelpers
add_library(DistGeomHelpers SHARED IMPORTED)

# Create imported target DistGeomHelpers_static
add_library(DistGeomHelpers_static STATIC IMPORTED)

# Create imported target MolAlign
add_library(MolAlign SHARED IMPORTED)

# Create imported target MolAlign_static
add_library(MolAlign_static STATIC IMPORTED)

# Create imported target MolChemicalFeatures
add_library(MolChemicalFeatures SHARED IMPORTED)

# Create imported target MolChemicalFeatures_static
add_library(MolChemicalFeatures_static STATIC IMPORTED)

# Create imported target ShapeHelpers
add_library(ShapeHelpers SHARED IMPORTED)

# Create imported target ShapeHelpers_static
add_library(ShapeHelpers_static STATIC IMPORTED)

# Create imported target MolCatalog
add_library(MolCatalog SHARED IMPORTED)

# Create imported target MolCatalog_static
add_library(MolCatalog_static STATIC IMPORTED)

# Create imported target MolDraw2D
add_library(MolDraw2D SHARED IMPORTED)

# Create imported target MolDraw2D_static
add_library(MolDraw2D_static STATIC IMPORTED)

# Create imported target FMCS
add_library(FMCS SHARED IMPORTED)

# Create imported target FMCS_static
add_library(FMCS_static STATIC IMPORTED)

# Create imported target SimDivPickers
add_library(SimDivPickers SHARED IMPORTED)

# Create imported target SimDivPickers_static
add_library(SimDivPickers_static STATIC IMPORTED)

# Create imported target hc
add_library(hc SHARED IMPORTED)

# Create imported target hc_static
add_library(hc_static STATIC IMPORTED)

# Create imported target InfoTheory
add_library(InfoTheory SHARED IMPORTED)

# Create imported target InfoTheory_static
add_library(InfoTheory_static STATIC IMPORTED)

# Create imported target ChemicalFeatures
add_library(ChemicalFeatures SHARED IMPORTED)

# Create imported target ChemicalFeatures_static
add_library(ChemicalFeatures_static STATIC IMPORTED)

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/rdkit-targets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
